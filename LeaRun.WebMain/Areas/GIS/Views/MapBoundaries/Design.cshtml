@{
    ViewBag.Title = "地图区域设计";
    Layout = "~/Views/Shared/_MapIndex.cshtml";
}
@section Scripts{

}

@section Styles{
    <style type="text/css">
        body, html, #allmap {
            width: 100%;
            height: 100%;
            overflow: hidden;
            margin: 0;
            font-family: "微软雅黑";
        }

        .map-content {
            padding-right: 10px;
        }

        .boundary-pts{
            padding-left:10px;
        }

        .boundary-pts ul li{
            padding:5px;
        }
        .boundary-pt-title {
            font-weight: bold;
            font-size: 18px;
            width: 80px;
            display: inline-block;
            text-align: left;
            color:blue;
        }

        .boundary-pt{
            width:100px;
            display:inline-block;
        }
    </style>
}

<div class="ui-layout" id="layout" style="height: 100%; width: 100%;">

    <div class="ui-layout-center">
        <div class="center-Panel">
            <div class="titlePanel">
                <div class="title-search">
                    <table>
                        <tr>
                            <td style="padding-left: 2px;">
                                <i class="fa fa-map-marker" style="font-size:28px; vertical-align:middle; color:#1d9d74; margin-right:5px;"></i>
                                <input id="txtSuggest" type="text" class="form-control" placeholder="请输入要查询关键字" style="width: 400px; display:inline-block;" />
                            </td>
                            <td style="padding-left: 5px;">
                                <a id="btn_Search" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;查询</a>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="toolbar">
                    <div class="btn-group">
                        <a id="lr-replace" class="btn btn-default" onclick="reload();"><i class="fa fa-refresh"></i>&nbsp;刷新</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="map-content">
            <div id="allmap"></div>
        </div>
    </div>

    <div class="ui-layout-east">
        <div class="east-Panel">
            <div class="boundary-pts">
                <div style="padding-top:15px;">
                    <button class="btn btn-info" id="btnJoinPoint" >区域连接</button>
                    <button class="btn btn-danger" id="btnClearPoint">清空</button>
                </div>
                <ul style="padding-top: 20px;">

                    @*<li data-value="2">
                        <span class="boundary-pt-title">边界点1</span>
                        <span>经度 <input type="text" class="form-control boundary-pt" /></span>
                        <span>纬度 <input type="text" class="form-control boundary-pt" /></span>
                        <button class="btn btn-sm btn-danger">删除</button>
                    </li>
                    <li data-value="2">
                        <span class="boundary-pt-title">边界点12</span>
                        <span>经度 <input type="text" class="form-control boundary-pt" /></span>
                        <span>纬度 <input type="text" class="form-control boundary-pt" /></span>
                        <button class="btn btn-sm btn-danger">删除</button>
                    </li>*@
                </ul>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    //初始化页面
    function InitialPage() {
        //layout布局
        $('#layout').layout({
            applyDefaultStyles: true,
            east__size: 450,
            onresize: function () {
                $(window).resize()
            }
        });
        $('.boundary-pts').height($(window).height() - 20);
        $('.map-content').height($(window).height() - 80);
        //resize重设(表格、树形)宽高
        $(window).resize(function (e) {
            window.setTimeout(function () {
                $('.boundary-pts').height($(window).height() - 20);
                $('.map-content').height($(window).height() - 80);
            }, 200);
            e.stopPropagation();
        });
    }
    InitialPage();

</script>
<script type="text/javascript">
    var kouMap = new Kou.Map();
    var map = kouMap.map;
    //
    kouMap.iniAutoComplete("txtSuggest");
    //
    //查询事件
    $("#btn_Search").click(function () {
        kouMap.searchAndSetPlace($("#txtSuggest").val());
    });
    //查询回车
    $('#txtSuggest').on('keydown', function (event) {
        if (event.keyCode == "13") {
            $('#btn_Search').trigger("click");
        }
    });

    //确定
    function AcceptClick(onAccept) {
        var postData = {
            address: $("#txtSuggest").val(),
            lng: $("#lng").val(),
            lat: $("#lat").val()
        };
        //
        onAccept(postData);
        dialogClose();
    }

    $(function () {
    });

    //区域
    function getBoundary() {
        var bdary = new BMap.Boundary();
        bdary.get("上海市浦东新区航头", function (rs) {       //获取行政区域
            map.clearOverlays();        //清除地图覆盖物
            var count = rs.boundaries.length; //行政区域的点有多少个
            if (count === 0) {
                dialogTop("未能获取当前输入行政区域", 'error');
                return;
            }
            var pointArray = [];
            for (var i = 0; i < count; i++) {
                var ply = new BMap.Polygon(rs.boundaries[i], { strokeWeight: 2, strokeColor: "#ff0000" }); //建立多边形覆盖物
                map.addOverlay(ply);  //添加覆盖物
                pointArray = pointArray.concat(ply.getPath());
            }
            map.setViewport(pointArray);    //调整视野
        });
    }
    //
    var lazyLoadResource = _.debounce(loadResources, 800);
    map.addEventListener("tilesloaded", function (e) {
        //lazyLoadResource();
    });
    //
    function loadResources() {
        var bounds = map.getBounds();
        console.log(bounds);
        var postBounds = {
            lngsw: bounds.Le,
            latsw: bounds.Ke,
            lngne: bounds.Ge,
            latne: bounds.Fe
        };
        $.ajax({
            url: "/GIS/ResourceMaps/GetResources",
            data: { queryJson: JSON.stringify(postBounds) },
            type: "get",
            dataType: "json",
            success: function (data) {
                locateResource(data);
            },
        });
    }

    //
    function locateResource(data) {
        //
        var cameras = data.Cameras;
        if (cameras != null && _.any(cameras)) {
            addPointCollection(cameras);
        }
    }

    function addPointCollection(aryRes) {
        // map.clearOverlays();
        var points = [];  // 添加海量点数据
        for (var i = 0; i < aryRes.length; i++) {
            var res = aryRes[i];
            points.push(new BMap.Point(res.Longitude, res.Latitude));
        }
        var options = {
            size: BMAP_POINT_SIZE_SMALL,
            shape: BMAP_POINT_SHAPE_WATERDROP,
            color: '#d340c3'
        }
        var pointCollection = new BMap.PointCollection(points, options);  // 初始化PointCollection
        pointCollection.addEventListener('click', function (e) {
            alert('单击点的坐标为：' + e.point.lng + ',' + e.point.lat);  // 监听点击事件
        });

        map.addOverlay(pointCollection);  // 添加Overlay
    }
    //
    var pIndex = 0;
    var pPrefix = "boundaryPt";
    var boundary = {
        points: [],
        markers: [],
        ply: null,
    };
    function clearBoundary() {
        //
        $(".boundary-pts ul").empty();
        boundary.points = [];
        //
        _.each(boundary.markers, function (m) {
            map.removeOverlay(m);
        });
        boundary.markers = [];
        //
        map.removeOverlay(boundary.ply);
        boundary.ply = null;
        //
        pIndex = 0;
    }

    function getPointKey(point) {
        return point.lng + "," + point.lat;
    }
    $(".boundary-pts").on("click", ".btn-pt-del", function () {
        var key = $(this).data("key");
        $(this).parent().remove();
        var findedIdx = -1;
        _.remove(boundary.points, function (p, i) {
            if (getPointKey(p) == key) {
                findedIdx = i;
                return true;
            }
        });
        if (findedIdx >= 0) {
            var delingMarks = _.pullAt(boundary.markers, findedIdx);
            _.each(delingMarks, function (m) {
                map.removeOverlay(m);
            });
        }

        paintBoundaryLine();
        
    });
    map.addEventListener("click", function (e) {
        pIndex++;
        var curPt = new BMap.Point(e.point.lng, e.point.lat);
        boundary.points.push(curPt);
        addMarker(curPt, pIndex);
        $(".boundary-pts ul").append(createPointHtml(curPt));
        paintBoundaryLine();
    });

    function createPointHtml(point) {
        var key = getPointKey(point);
        var html = "<li>";
        html += '<span class="boundary-pt-title">边界点' + (pIndex) + '</span>';
        html += '<span>经度 <input type="text" class="form-control boundary-pt" value="' + point.lng +'"/></span> ';
        html += '<span>纬度 <input type="text" class="form-control boundary-pt" value="' + point.lat + '" /></span> ';
        html += '<button class="btn btn-xs btn-danger btn-pt-del" data-key="' + key + '"><i class="fa fa-trash-o"></i> 删除</button>';
        html += "</li>";

        return html;
    }
    function addMarker(point, index) {
        var marker = new BMap.Marker(point);
        map.addOverlay(marker);
        var label = new BMap.Label("边界点" + index, { offset: new BMap.Size(20, -10) });
        marker.setLabel(label);
        boundary.markers.push(marker);
    }

    function paintBoundary() {
        map.removeOverlay(boundary.ply);
        var pts = boundary.points;
        var ply = new BMap.Polygon(pts, { strokeWeight: 2, strokeColor: "#ff0000" }); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
        boundary.ply = ply;
    }

    function paintBoundaryLine() {
        map.removeOverlay(boundary.ply);
        var pts = boundary.points;
        var ply = new BMap.Polyline(pts, { strokeWeight: 2, strokeColor: "#ff0000" }); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
        boundary.ply = ply;
    }

    $("#btnJoinPoint").click(function () {
        paintBoundary();
    });

    $("#btnClearPoint").click(function () {
        //
        clearBoundary();
    });

</script>
