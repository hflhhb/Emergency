@{
    ViewBag.Title = "地图区域设计";
    Layout = "~/Views/Shared/_MapIndex.cshtml";
}
@section Scripts{

}

@section Styles{
    <style type="text/css">
        .map-content {
            /*padding-right: 10px;*/
        }

        .boundary-pts{
            padding-left:10px;
        }

        .boundary-pts ul li{
            padding:5px;
        }
        .boundary-pt-title {
            font-weight: bold;
            font-size: 16px;
            width: 50px;
            display: inline-block;
            text-align: left;
            color: #337ab7;
        }

        .boundary-pt{
            width:80px;
            display:inline-block;
        }

        .content-panel{
            position:relative;
        } 
        .panel-header {
            padding:15px 5px 0px;
        } 
        .panel-footer {
            position: fixed;
            bottom: 0px;
        }
    </style>
}

<div class="ui-layout" id="layout" style="height: 100%; width: 100%;">

    <div class="ui-layout-center">
        <div class="center-Panel" style="margin-left:10px; margin-right:0px;">
            <div class="titlePanel">
                <div class="title-search">
                    <table>
                        <tr>
                            <td style="padding-left: 2px;">
                                <i class="fa fa-map-marker" style="font-size:28px; vertical-align:middle; color:#1d9d74; margin-right:5px;"></i>
                                <input id="txtSuggest" type="text" class="form-control" placeholder="请输入要查询关键字" style="width: 400px; display:inline-block;" />
                            </td>
                            <td style="padding-left: 5px;">
                                <a id="btn_Search" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;查询</a>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="toolbar">
                    <div class="btn-group">
                        <a id="lr-replace" class="btn btn-default" onclick="reload();"><i class="fa fa-refresh"></i>&nbsp;刷新</a>
                    </div>
                </div>
            </div>
            <div class="map-content">
                <div id="allmap"></div>
            </div>
        </div>
    </div>

    <div class="ui-layout-east">
        <div class="east-Panel">
            <div class="content-panel">
                <div class="panel-header">
                    <div class="pull-left">
                        <button class="btn btn-info" id="btnJoinPoint">区域连接</button>
                        <button class="btn btn-danger" id="btnClearPoint">清空</button>
                    </div>
                    <div class="pull-right">
                        <button class="btn btn-primary lr-push-right" id="btnSave">保存</button>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="boundary-pts">

                    <ul style="padding-top: 20px;">

                        @*<li data-value="2">
                        <span class="boundary-pt-title">边界点1</span>
                        <span>经度 <input type="text" class="form-control boundary-pt" /></span>
                        <span>纬度 <input type="text" class="form-control boundary-pt" /></span>
                        <button class="btn btn-sm btn-danger">删除</button>
                    </li>
                    <li data-value="2">
                        <span class="boundary-pt-title">边界点12</span>
                        <span>经度 <input type="text" class="form-control boundary-pt" /></span>
                        <span>纬度 <input type="text" class="form-control boundary-pt" /></span>
                        <button class="btn btn-sm btn-danger">删除</button>
                    </li>*@
                    </ul>
                </div>
                @*<div class="panel-footer">

                </div>*@
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var keyValue = request('keyValue');
    checkKeyvalue();
    //初始化页面
    function InitialPage() {
        //layout布局
        $('#layout').layout({
            applyDefaultStyles: true,
            east__size: 300,
            onresize: function () {
                $(window).resize()
            }
        });
        $('.content-panel').height($(window).height() - 20);
        $('.map-content').height($(window).height() - 80);
        //resize重设(表格、树形)宽高
        $(window).resize(function (e) {
            window.setTimeout(function () {
                $('.content-panel').height($(window).height() - 20);
                $('.map-content').height($(window).height() - 80);
            }, 200);
            e.stopPropagation();
        });
    }
    InitialPage();

    function checkKeyvalue() {
        if (!keyValue) {
            dialogTop("区域模型[keyvalue]不存在.", 'error');
            return false;
        }
        return true;
    }
</script>
<script type="text/javascript">
    var kouMap = new Kou.Map();
    var map = kouMap.map;
    //
    kouMap.iniAutoComplete("txtSuggest");
    map.setDefaultCursor("default");
    //
    //查询事件
    $("#btn_Search").click(function () {
        kouMap.searchAndSetPlace($("#txtSuggest").val());
    });
    //查询回车
    $('#txtSuggest').on('keydown', function (event) {
        if (event.keyCode == "13") {
            $('#btn_Search').trigger("click");
        }
    });

    //确定
    function AcceptClick(onAccept) {
        dialogClose();
    }

    //
    var lazyLoadDbBoundary = _.debounce(loadBoundary, 0);
    $(function () {
        lazyLoadDbBoundary();
    });
    map.addEventListener("tilesloaded", function (e) {
        //lazyLoadDbBoundary();
    });
    //
    function getMapBounds() {
        var bounds = map.getBounds();
        var postBounds = {
            lngsw: bounds.Le,
            latsw: bounds.Ke,
            lngne: bounds.Ge,
            latne: bounds.Fe
        };

        return postBounds;
    }
    function loadBoundary() {
        var postBounds = getMapBounds();
        $.ajax({
            url: "/GIS/MapBoundaries/GetListJson",
            data: { queryJson: JSON.stringify(postBounds) },
            type: "get",
            dataType: "json",
            success: function (data) {
                paintAllBoundary(data);
            },
        });

    }

    function paintAllBoundary(data) {
        var pointArray = [];
        _.each(data, function (b) {
            if (b.Id == keyValue) {
                paintDbBoundary(b);
            } else {
                paintBrotherBoundary(b);
            }
        });

        //map.setViewport(pointArray);    //调整视野

    }
    //
    //function loadDbBoundary() {
    //    if (!checkKeyvalue()) return;
    //    $.ajax({
    //        url: "/GIS/MapBoundaries/GetFormJson?keyvalue="+keyValue,
    //        data: {  },
    //        type: "get",
    //        dataType: "json",
    //        success: function (data) {
    //            paintDbBoundary(data);
    //        },
    //    });
    //}

    //

    function paintBrotherBoundary(b) {
        var pointArray = [];
        var boundarypts = b.Boundary;

        var ply = new BMap.Polygon(boundarypts, {
            //strokeWeight: 2, strokeColor: "#ff0000"
            strokeColor: "#0955CF",
            strokeWeight: 1,
            strokeOpacity: 0.7,
            strokeStyle: "dashed",
            filled: true,
            fillColor: "#84A8E2",
            fillOpacity: 0.3,
            //autoClose: true,
            //infowin: false
        }); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物

        var position = new BMap.Point(b.Longitude, b.Latitude);
        //创建label
        var label = new BMap.Label({ position: position });
        label.setStyle({
            //height: '25px',
            //color: "#fff",
            backgroundColor: 'transparent',
            border: 'none',
            //borderRadius: "25px",
            //fontWeight: 'bold',
        });
        //var content = '<span style="color:red"><i class="fa fa-map-marker"></i></span>' + '<p style="padding:0px 13px;text-align:center;margin-top:5px;">这是一个点</p>';
        //var content = '<div data-id="chuansha" class="plate-overlay visited">川沙<br>4.3万<br>1086套</div>';
        //var content = '<div data-id="chuansha" class="plate-overlay visited">' + '川沙<br>4.3万<br>1086套' + '</div>';
        var content = '<div data-id="chuansha" class="plate-overlay visited">' + decodeURIComponent(b.Content || "") + '</div>';
        label.setContent(content);
        label.setPosition(position);
        label.setOffset(new BMap.Size(-43, -43));
        //_boundaryLabels.push(label);
        map.addOverlay(label);

        pointArray = pointArray.concat(ply.getPath());

        //map.setViewport(pointArray);    //调整视野

    }
    //
    function paintDbBoundary(data) {
        var dbBoundary = data.Boundary;
        if (!dbBoundary) return;
        //
        var dbPoints = dbBoundary.split(";");
        var html = "";
        _.each(dbPoints, function (p) {
            var pt = p.split(",");
            pIndex++;
            var curPt = new BMap.Point(pt[0], pt[1]);
            boundary.points.push(curPt);
            addMarker(curPt, pIndex);
            html += createPointHtml(curPt);
        });
        
        $(".boundary-pts ul").append(html);
        paintBoundary();
        //
        map.setViewport(boundary.points);
    }

    //
    var pIndex = 0;
    var pPrefix = "boundaryPt";
    var boundary = {
        points: [],
        markers: [],
        ply: null,
    };
    function clearBoundary() {
        //
        $(".boundary-pts ul").empty();
        boundary.points = [];
        //
        _.each(boundary.markers, function (m) {
            map.removeOverlay(m);
        });
        boundary.markers = [];
        //
        map.removeOverlay(boundary.ply);
        boundary.ply = null;
        //
        pIndex = 0;
    }

    function getPointKey(point) {
        return point.lng + "," + point.lat;
    }
    $(".boundary-pts").on("click", ".btn-pt-del", function () {
        var key = $(this).data("key");
        $(this).parent().remove();
        var findedIdx = -1;
        _.remove(boundary.points, function (p, i) {
            if (getPointKey(p) == key) {
                findedIdx = i;
                return true;
            }
        });
        if (findedIdx >= 0) {
            var delingMarks = _.pullAt(boundary.markers, findedIdx);
            _.each(delingMarks, function (m) {
                map.removeOverlay(m);
            });
        }

        paintBoundaryLine();
        
    });
    map.addEventListener("click", function (e) {
        pIndex++;
        var curPt = new BMap.Point(e.point.lng, e.point.lat);
        boundary.points.push(curPt);
        addMarker(curPt, pIndex);
        $(".boundary-pts ul").append(createPointHtml(curPt));
        paintBoundaryLine();
    });

    function createPointHtml(point) {
        var key = getPointKey(point);
        var html = '<li class="boundary-pt-li" data-key="' + key + '">';
        html += '<span class="boundary-pt-title"><i class="fa fa-map-signs"></i> ' + (pIndex) + '</span>';
        html += '<span><input type="text" class="form-control boundary-pt" value="' + point.lng +'"/></span> ';
        html += '<span><input type="text" class="form-control boundary-pt" value="' + point.lat + '" /></span> ';
        html += '<button class="btn btn-xs btn-danger btn-pt-del" data-key="' + key + '"><i class="fa fa-trash-o"></i> 删除</button>';
        html += "</li>";

        return html;
    }
    function addMarker(point, index) {
        var marker = new BMap.Marker(point);
        map.addOverlay(marker);
        var label = new BMap.Label("边界点" + index, { offset: new BMap.Size(20, -10) });
        marker.setLabel(label);
        boundary.markers.push(marker);
    }

    function paintBoundary() {
        map.removeOverlay(boundary.ply);
        var pts = boundary.points;
        var ply = new BMap.Polygon(pts, {
            strokeWeight: 2, strokeColor: "#ff0000"
        }); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
        boundary.ply = ply;
    }

    function paintBoundaryLine() {
        map.removeOverlay(boundary.ply);
        var pts = boundary.points;
        var ply = new BMap.Polyline(pts, {
            strokeWeight: 2, strokeColor: "#ff0000"
        }); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
        boundary.ply = ply;
    }

    $("#btnJoinPoint").click(function () {
        paintBoundary();
    });

    $("#btnClearPoint").click(function () {
        //
        clearBoundary();
    });

    $("#btnSave").click(function () {
        //
        if (!keyValue) {
            dialogTop("区域模型[keyvalue]不存在.", 'error');
            return;
        }
        var points = [];
        $(".boundary-pt-li").each(function () {
            points.push($(this).data("key"));
        });
        if (points.length <= 2) {
            dialogTop("请输入两个以上的点.", 'error');
            return;
        }
        paintBoundary();
        var ptStr = points.join(";");
        var center = boundary.ply.getBounds().getCenter();
        console.log(ptStr, center);
        //
        var postData = {
            longitude: center.lng,
            latitude: center.lat,
            boundary: ptStr
        };
        $.SaveForm({
            url: "/GIS/MapBoundaries/SaveForm?keyValue=" + keyValue,
            param: postData,
            loading: "正在保存数据...",
            success: function () {
                $.currentIframe().$("#gridTable").trigger("reloadGrid");
            }
        });
        
    });

</script>
