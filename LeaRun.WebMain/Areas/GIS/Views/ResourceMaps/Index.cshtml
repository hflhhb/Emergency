@{
    ViewBag.Title = "应急地图展示";
    Layout = "~/Views/Shared/_MapIndex.cshtml";
}
@section Scripts{
<script type="text/javascript" src="http://api.map.baidu.com/library/CityList/1.4/src/CityList_min.js"></script>
<!--加载鼠标绘制工具-->
<link rel="stylesheet" href="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css" />
<script type="text/javascript" src="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js"></script>
}

@section Styles{
    <style type="text/css">
        body, html, #allmap {
            width: 100%;
            height: 100%;
            overflow: hidden;
            margin: 0;
            font-family: "微软雅黑";
        }

        .map-content {
            padding-right: 10px;
        }
        .gis-rc-img{
            width:30px;
            height:50px;
        }
        .card-box-title{
            padding:12px;
            font-size:16px;
        }
        .plate-overlay {
            box-sizing: border-box;
            width: 86px;
            height: 86px;
            line-height: 160%;
            padding-top: 16px;
            border-radius: 50%;
            background: rgba(46, 171, 98, 0.8);
            text-align: center;
            font-size: 12px;
            font-weight: inherit;
            color: #fff;
            box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.24);
        }

            .plate-overlay:hover {
                background: rgba(221, 36, 36, 0.8) !important;
            }

            .plate-overlay.zufang {
                background: rgba(74, 137, 238, 0.9);
                padding-top: 24px;
            }

            .plate-overlay.visited {
                background: rgba(102, 205, 160, 0.9);
            }

            .plate-overlay.zufang.visited {
                background: rgba(133, 174, 235, 0.9);
            }
        .area-title {
            font-weight:bold;
            font-size:14px;
            color:orangered;
            vertical-align:bottom;
        }
        .area-bar{
            /*width:24px;*/
            height:34px;
            padding-right:5px;
        } 
        .legend-container {
            /*position:fixed;
            bottom:50px;
            zoom:9999;*/
            z-index: 9999;
        }
        .legend-items {
            border:1px solid red;
            width:500px;
        }

        .plugIn {
            position: absolute;
            bottom: 30px;
            left: 50%;
            margin-left: -400px;
            height: 65px;
        }

            .plugIn:after {
                content: '';
                display: table;
                clear: both;
            }

            .plugIn .plugIn-list {
                height: 100%;
                border-radius: 60px;
                background-color: rgba(234, 234, 234, 0.74);
                box-shadow: 1px 2px 5px 1px #9c9c9c, inset 0 -5px 10px 1px #cacaca;
                padding: 0 40px;
            }

                .plugIn .plugIn-list > li {
                    float: left;
                    width: 80px;
                    text-align: center;
                    font-size: 13px;
                    height: 100%;
                    padding-top: 42px;
                    position: relative;
                }

                    .plugIn .plugIn-list > li.active > i {
                        color: #fff;
                        background: linear-gradient(#2f83d8, #053769);
                        line-height: 55px;
                        border: 0;
                        box-shadow: 0px 0px 12px 5px #00dcff;
                    }

                    .plugIn .plugIn-list > li > i {
                        box-shadow: 1px 1px 20px 1px #0a4b8c;
                        width: 55px;
                        height: 55px;
                        border-radius: 30px;
                        background-color: #fff;
                        position: absolute;
                        top: -28px;
                        left: 50%;
                        margin-left: -28px;
                        cursor: pointer;
                        font-size: 34px;
                        color: #0f4479;
                        border: 5px solid #14599e;
                        line-height: 46px;
                    }

            .plugIn .plugIn-box {
                position: absolute;
                bottom: 108px;
                min-width: 100%;
                background-color: rgba(255, 255, 255, 0.74);
                box-shadow: 1px 2px 5px 1px #9c9c9c, inset 0 -5px 10px 1px #cacaca;
                border-radius: 3px;
                padding: 5px 10px;
                display: none;
            }

                .plugIn .plugIn-box > li {
                    line-height: 1.7;
                    border-radius: 2px;
                    font-size: 12px;
                    margin-bottom: 5px;
                    cursor: pointer;
                    white-space: nowrap;
                    text-align: left;
                    padding: 0 5px;
                }

                    .plugIn .plugIn-box > li:nth-child(1):before {
                        content: '';
                        display: inline-block;
                        background-image: url(/Content/images/gis/alarm.png);
                        background-repeat: no-repeat;
                        width: 17px;
                        height: 17px;
                        -webkit-background-size: contain;
                        background-size: contain;
                        vertical-align: middle;
                        margin-right: 3px;
                    }

                    .plugIn .plugIn-box > li.spliter {
                        border: 1px solid #797979;
                        margin: 0 5px 5px 5px;
                    }

                    .plugIn .plugIn-box > li:hover,
                    .plugIn .plugIn-box > li.active {
                        background-color: #2b67ad;
                        color: #fff;
                    }

                .plugIn .plugIn-box:after {
                    content: '';
                    width: 0;
                    height: 0;
                    border-style: solid;
                    border-width: 8px 7px 0 7px;
                    border-color: #b9b9b9 transparent transparent transparent;
                    position: absolute;
                    bottom: -8px;
                    margin-left: -7px;
                }

    </style>
}

<div class="map-container">
    <div class="legend-container plugIn">
        @*<div class="card-box" data-key="gasStation">
            <div class="card-box-img">
                <img class="gis-rc-img" src="~/Content/images/gis/a1.gif" />
            </div>
            <div class="card-box-content"><p class="card-box-title">加油站</p></div>
        </div>
        <div class="card-box" data-key="school">
            <div class="card-box-img">
                <img class="gis-rc-img" src="~/Content/images/gis/a2.gif" />
            </div>
            <div class="card-box-content">
                <p class="card-box-title">学校</p>
            </div>
        </div>
        <div class="card-box" data-key="camera">
            <div class="card-box-img">
                <img class="gis-rc-img" src="~/Content/images/gis/a8.gif" />
            </div>
            <div class="card-box-content"><p class="card-box-title">摄像头</p></div>
        </div>
        <div class="card-box" data-key="hospital">
            <div class="card-box-img">
                <img class="gis-rc-img" src="~/Content/images/gis/a5.gif" />
            </div>
            <div class="card-box-content"><p class="card-box-title">医院</p></div>
        </div>*@
        <ul class="plugIn-list">
            <li data-v="shield" class="noList">
                <i class="fa fa-bolt"></i>
                <span>防护目标</span>
            </li>
            <li data-v="alarm">
                <ul class="plugIn-box">
                    <li>党政军机关</li>
                    <li data-key="school">学校</li>
                    <li>公众聚集场所</li>
                    <li>重要场所</li>
                    <li class="spliter"></li>
                    <li>在建工程施工场所</li>
                    <li>公路基础设施</li>
                    <li>水运基础交通设施</li>
                    <li>水利设施</li>
                    <li>电力基础设施</li>
                    <li>石油天然气设施</li>
                    <li>领导机构</li>
                    <li>办事机构</li>
                    <li>指挥和综合协调机构</li>
                </ul>
                <i class="fa fa-university" style="font-size: 25px;"></i>
                <span>应急机构</span>
            </li>
            <li data-v="reunion">
                <ul class="plugIn-box">
                    <li>专家</li>
                    <li>军队</li>
                    <li>武警</li>
                    <li>公安警察</li>
                    <li>专业救援队伍</li>
                </ul>
                <i class="fa fa-users" style="font-size: 25px;"></i>
                <span>人力资源</span>
            </li>
            <li data-v="plumbering">
                <ul class="plugIn-box">
                    <li>战略性储备物资</li>
                    <li>专用应急物资及储备</li>
                    <li>基本生活保障物资</li>
                    <li>应急装备</li>
                </ul>
                <i style="font-size: 30px;" class="fa fa-truck"></i>
                <span>物资储备</span>
            </li>
            <li data-v="earth-globe">
                <ul class="plugIn-box">
                    <li>通信网</li>
                    <li>通信保障机构</li>
                    <li>通信设备</li>
                </ul>
                <i class="fa fa-globe"></i>
                <span>通信资源</span>
            </li>
            <li data-v="travel">
                <ul class="plugIn-box">
                    <li>运输站场</li>
                    <li>运输设备</li>
                    <li>运输保障机构</li>
                </ul>
                <i class="fa fa-plane"></i>
                <span>运输物流</span>
            </li>
            <li data-v="hospital">
                <ul class="plugIn-box">
                    <li>医疗机构</li>
                    <li>疾病预防控制中心</li>
                    <li>卫生监督所</li>
                    <li>医学科学研究机构</li>
                    <li>医疗设备和药品</li>
                    <li>其他医疗卫生资源</li>
                </ul>
                <i class="fa fa-heartbeat" style="font-size: 30px;"></i>
                <span>医疗卫生</span>
            </li>
            <li data-v="shelter">
                <ul class="plugIn-box">
                    <li>避难场所</li>
                    <li>人防工程</li>
                </ul>
                <i class="fa fa-home"></i>
                <span>避难场所</span>
            </li>
            <li data-v="refund">
                <ul class="plugIn-box">
                    <li>专项应急资金</li>
                    <li>募捐资金</li>
                    <li>应急保障</li>
                </ul>
                <i class="fa fa-bar-chart" style="font-size: 27px;"></i>
                <span>财力保障</span>
            </li>
            <li data-v="desktop" data-key="camera"  class="noList">
                <i style="font-size: 25px;" class="fa fa-desktop"></i>
                <span>视频监控</span>
            </li>
        </ul>

        @*<ul class="plugIn-list">
            <li data-v="shield">防护目标</li>
            <li data-v="alarm">
                <ul class="plugIn-box">
                    <li>党政军机关</li>
                    <li data-key="school">学校</li>
                    <li>公众聚集场所</li>
                    <li>重要场所</li>
                    <li>在建工程施工场所</li>
                    <li>公路基础设施</li>
                    <li>水运基础交通设施</li>
                    <li>水利设施</li>
                    <li>电力基础设施</li>
                    <li data-key="gasStation">石油天然气设施</li>
                    <li>领导机构</li>
                    <li>办事机构</li>
                    <li>指挥和综合协调机构</li>
                </ul>
                <span>应急机构</span>
            </li>
            <li data-v="reunion">
                <ul class="plugIn-box">
                    <li>专家</li>
                    <li>军队</li>
                    <li>武警</li>
                    <li>公安警察</li>
                    <li>专业救援队伍</li>
                </ul>
                <span>人力资源</span>
            </li>
            <li data-v="plumbering">
                <ul class="plugIn-box">
                    <li>战略性储备物资</li>
                    <li>专用应急物资及储备</li>
                    <li>基本生活保障物资</li>
                    <li>应急装备</li>
                </ul>
                <span>物资储备</span>
            </li>
            <li data-v="earth-globe">
                <ul class="plugIn-box">
                    <li>通信网</li>
                    <li>通信保障机构</li>
                    <li>通信设备</li>
                </ul>
                <span>通信资源</span>
            </li>
            <li data-v="travel">
                <ul class="plugIn-box">
                    <li>运输站场</li>
                    <li>运输设备</li>
                    <li>运输保障机构</li>
                </ul>
                <span>运输物流</span>
            </li>
            <li data-v="hospital">
                <ul class="plugIn-box">
                    <li data-key="hospital">医疗机构</li>
                    <li>疾病预防控制中心</li>
                    <li>卫生监督所</li>
                    <li>医学科学研究机构</li>
                    <li>医疗设备和药品</li>
                    <li>其他医疗卫生资源</li>
                </ul>
                <span>医疗卫生</span>
            </li>
            <li data-v="shelter">
                <ul class="plugIn-box">
                    <li>避难场所</li>
                    <li>人防工程</li>
                </ul>
                <span>避难场所</span>
            </li>
            <li data-v="refund">
                <ul class="plugIn-box">
                    <li>专项应急资金</li>
                    <li>募捐资金</li>
                    <li>应急保障</li>
                </ul>
                <span>财力保障</span>
            </li>
            <li data-v="desktop" data-key="camera" >视频监控</li>
        </ul>*@
    </div>
    <div class="center-Panel">
        <div class="titlePanel">
            <div class="title-search">
                <table>
                    <tr>
                        <td style="padding-left: 2px;">
                            <i class="fa fa-map-marker" style="font-size:28px; vertical-align:middle; color:#1d9d74; margin-right:5px;"></i>
                            <input id="txtSuggest" type="text" class="form-control" placeholder="请输入要查询关键字" style="width: 400px; display:inline-block;" />
                        </td>
                        <td style="padding-left: 5px;">
                            <a id="btn_Search" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;查询</a>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="toolbar">
                <div class="btn-group">
                    <a id="lr-replace" class="btn btn-default" onclick="reload();"><i class="fa fa-refresh"></i>&nbsp;刷新</a>
                </div>
            </div>
        </div>
    </div>
    <div class="map-content">
        <div id="allmap"></div>
    </div>
</div>
<script type="text/javascript">
    //初始化页面
    function InitialPage() {
        //layout布局
        //$('#layout').layout({
        //    applyDefaultStyles: true,
        //    west__size: 225,
        //    onresize: function () {
        //        $(window).resize()
        //    }
        //});
        //$('.profile-nav').height($(window).height() - 20);
        $('.map-content').height($(window).height() - 60);
        //resize重设(表格、树形)宽高
        $(window).resize(function (e) {
            window.setTimeout(function () {
                //$('.profile-nav').height($(window).height() - 20);
                $('.map-content').height($(window).height() - 60);
            }, 200);
            e.stopPropagation();
        });
    }
    InitialPage();
    //
    $(".card-box").click(function () {
        if (!$(this).hasClass("active")) {
            $(this).addClass("active")
        } else {
            $(this).removeClass("active")
        }
        //
        map.setZoom(CLUSTER_ZOOM);
        toggleResource();
    });

    function LegendBox(config) {
        var defaults = {
            onSelect: function (keys) { }
        };

        this.options = $.extend({}, defaults, config);

        this.active = '';
        this.key = [];
        this.keys = {};
        this.ids = {};
        this.init();
    }
    LegendBox.prototype = {
        init : function () {
            var self = this;
            $('.plugIn-box').each(function () {
                var w = ($(this).outerWidth() - $(this).closest('li').outerWidth()) / 2;
                $(this).offset({ left: -w })
            });
            $('.map-container').click(this.hide);
            $('.plugIn-list > li').click(function (e) {
                e.stopPropagation();
                //self.hide();
                self.active = $(this).data('v');
                var resKind = $(this).data("key");
                var box = $(this).find('.plugIn-box');

                self.hide();
                if (box.length <= 0) {
                    if (!$(this).hasClass("active")) {
                        $(this).addClass("active");
                        self.saveKey(resKind);
                    } else {
                        $(this).removeClass("active");
                        self.removeKey(resKind);
                    }
                    //if ($.inArray(resKind, self.key) >= 0) {
                    //    self.removeKey(resKind);
                    //} else {
                    //    self.saveKey(resKind);
                    //}
                    self.select();
                } else {
                    if (!$(this).hasClass('active')) {
                        $(this).addClass('active');
                    }
                }
                self.show(box);

                //if ($(this).hasClass('active')) {
                //    $(this).removeClass('active');
                //    if (box.length <= 0) {
                //        if ($.inArray(resKind, self.key) >= 0) {
                //            self.removeKey(resKind);
                //            self.select();
                //        }
                //    } else {
                //        self.hide()
                //    }
                //} else {
                //    self.hide();
                //    $(this).addClass('active');
                //    if (box.length <= 0) {
                //        if ($.inArray(resKind, self.key) < 0) {
                //            self.saveKey(resKind);
                //            self.select();
                //        }
                //    } else {
                //        self.show(box)
                //    }
                //}

                console.log(self.key);


                //if (box.length <= 0) {
                //    if ($.inArray(resKind, self.key) < 0) {
                //        self.saveKey(resKind);
                //    } else {
                //        self.removeKey(resKind);
                //    }
                //    self.select();
                //} else {
                //    self.show(box)
                //}
            });
            $('.plugIn-box > li:not(.spliter)').click(function (e) {
                e.stopPropagation();
                if (self.key.length === 10 && !$(this).hasClass('active')) {
                    alert('最多同时支持搜索10个选项!')
                }  else {
                    var resKind = $(this).data("key");
                    if ($(this).hasClass('active')) {
                        self.removeKey(resKind);
                        $(this).removeClass('active');
                    } else {
                        $(this).addClass('active');
                        self.saveKey(resKind);
                    }
                    self.select();
                }

                console.log(self.key);
            });
        },

        saveKey: function (value) {
            value = $.trim(value);
            if (!value) return;
            this.keys[value] = this.active;
            this.key.push(value);
        },
        removeKey: function (value) {
            value = $.trim(value);
            if (!value) return;
            var index = $.inArray(value, this.key);
            this.key.splice(index, 1);
        },
        show: function (box) {
            $(box).show();
        },
        hide: function () {
            $('.plugIn-box').hide();
            var box = $('.plugIn-list');
            var la = box.find('>li.active');
            la.each(function () {
                if ($(this).find('.plugIn-box').length > 0) {
                    if ($(this).find('li.active').length <= 0) {
                        $(this).removeClass('active');
                    }
                }
            });

            //$('.plugIn-box').hide();
            //$('.plugIn-list > li:not(.noList)').removeClass('active');
        },
        select: function () {
            if (!!this.options.onSelect) {
                this.options.onSelect.call(this, this.key);
            }
        }
    }
    var legendbox = new LegendBox({
        onSelect: function () {
            //map.setZoom(CLUSTER_ZOOM);
            toggleResource();
        }
    });
</script>
<script type="text/javascript">
    var kouMap = new Kou.Map();
    var map = kouMap.map;
    //
    kouMap.iniAutoComplete("txtSuggest");

    //
    //查询事件
    $("#btn_Search").click(function () {
        kouMap.searchAndSetPlace($("#txtSuggest").val());
    });
    //查询回车
    $('#txtSuggest').on('keydown', function (event) {
        if (event.keyCode == "13") {
            $('#btn_Search').trigger("click");
        }
    });

    //确定
    function AcceptClick(onAccept) {
        var postData = {
            address: $("#txtSuggest").val(),
            lng: $("#lng").val(),
            lat: $("#lat").val()
        };
        //
        onAccept(postData);
        dialogClose();
    }

    var CLUSTER_ZOOM = 15;
    var _boundaryLabels = [];
    var _ptCollections = {};
    var _styleOptions = getManuallyStyleOpts(); 

    $(function () {
        //getBoundary();
        loadBoundary();
        //lazyLoadResource();
    });

    function getMapBounds() {
        var bounds = map.getBounds();
        var postBounds = {
            lngsw: bounds.Le,
            latsw: bounds.Ke,
            lngne: bounds.Ge,
            latne: bounds.Fe
        };

        return postBounds;
    }
    function loadBoundary() {
        var postBounds = getMapBounds();
        $.ajax({
            url: "/GIS/MapBoundaries/GetListJson",
            data: { queryJson: JSON.stringify(postBounds) },
            type: "get",
            dataType: "json",
            success: function (data) {
                paintBoundary(data);
            },
        });
        
    }

    function paintBoundary(data) {
        var pointArray = [];
        _.each(data, function (b) {
            var boundarypts = b.Boundary;
            console.log(b.Properties);
            var objProp = eval("(" + decodeURIComponent(b.Properties || "{}") + ")");
            var cusStyle = objProp.style;
            console.log(objProp);
            var style = _.extend({}, {
                //strokeWeight: 2, strokeColor: "#ff0000"
                strokeColor: "#0955CF",
                strokeWeight: 1,
                strokeOpacity: 0.7,
                strokeStyle: "dashed",
                filled: true,
                fillColor: "#84A8E2",
                fillOpacity: 0.3,
                //autoClose: true,
                //infowin: false
            }, cusStyle);

            var ply = new BMap.Polygon(boundarypts, style); //建立多边形覆盖物
            map.addOverlay(ply);  //添加覆盖物

            var position = new BMap.Point(b.Longitude, b.Latitude);
            //创建label
            var label = new BMap.Label({ position: position });
            label.setStyle({
                //height: '25px',
                //color: "#fff",
                backgroundColor:'transparent',
                border: 'none',
                //borderRadius: "25px",
                //fontWeight: 'bold',
            });
            //var content = '<span style="color:red"><i class="fa fa-map-marker"></i></span>' + '<p style="padding:0px 13px;text-align:center;margin-top:5px;">这是一个点</p>';
            //var content = '<div data-id="chuansha" class="plate-overlay visited">川沙<br>4.3万<br>1086套</div>';
            //var content = '<div data-id="chuansha" class="plate-overlay visited">' + '川沙<br>4.3万<br>1086套' + '</div>';
            //var content = '<div data-id="chuansha" class="plate-overlay visited">' + decodeURIComponent(b.Content || "") + '</div>';
            var content = '<div data-id="' + b.Id + '" class=""><img class="area-bar" src="/Content/images/gis/bar.png"><span class="area-title">' + b.Name + ':100人</span></div>';
            label.setContent(content);
            label.setPosition(position);
            label.setOffset(new BMap.Size(-43, -43));
            _boundaryLabels.push(label);
            map.addOverlay(label);

            pointArray = pointArray.concat(ply.getPath());
        });

        map.setViewport(pointArray);    //调整视野
        
    }
    //
    //var cityList = new BMapLib.CityList();

    //cityList.getBusiness('航头', function (json) {
    //    console.log('商圈');
    //    console.log(json);
    //    var boundarypts = json[0].coordinate;
    //    var ply = new BMap.Polygon(boundarypts, {
    //        strokeWeight: 2, strokeColor: "#ff0000",
    //        //strokeColor: "#0955CF",
    //        //strokeWeight: 2,
    //        //strokeOpacity: 0.7,
    //        dashStyle: "Solid",
    //        //filled: true,
    //        //fillColor: "#84A8E2",
    //        //fillOpacity: 0.3,
    //        //autoClose: true,
    //        //infowin: false
    //    }); //建立多边形覆盖物
    //    map.addOverlay(ply);  //添加覆盖物
    //    //pointArray = pointArray.concat(ply.getPath());
    //});

    //cityList.getSubAreaList(289, function (json) {
    //    console.log('城市列表');
    //    console.log(json);
    //});


    //区域
    function getBoundary() {
        var bdary = new BMap.Boundary();
        bdary.get("上海市浦东新区", function (rs) {       //获取行政区域
            map.clearOverlays();        //清除地图覆盖物
            var count = rs.boundaries.length; //行政区域的点有多少个
            if (count === 0) {
                dialogTop("未能获取当前输入行政区域", 'error');
                return;
            }
            var pointArray = [];
            for (var i = 0; i < count; i++) {
                var ply = new BMap.Polygon(rs.boundaries[i], {
                    //strokeWeight: 2, strokeColor: "#ff0000"
                    strokeColor: "#0955CF",
                    strokeWeight: 2,
                    strokeOpacity: 0.7,
                    dashStyle: "Solid",
                    filled: true,
                    fillColor: "#84A8E2",
                    fillOpacity: 0.3,
                    autoClose: true,
                    infowin: false
                }); //建立多边形覆盖物
                map.addOverlay(ply);  //添加覆盖物
                pointArray = pointArray.concat(ply.getPath());
            }
            map.setViewport(pointArray);    //调整视野
        });
    }
    //
    var lazyLoadResource = _.debounce(loadResources, 800);

    function toggleResource() {
        var curZoom = map.getZoom();
        if (curZoom < CLUSTER_ZOOM) {
            _.each(_boundaryLabels, function (lb) {
                lb.show();
            });
            clearPointCllections();
            //return;
        }
        if (getSelectedKinds().length <= 0) {
            clearPointCllections();
            return;
        }
        _.each(_boundaryLabels, function (lb) {
            lb.hide();
        });
        loadResources();
    }

    map.addEventListener("tilesloaded", function (e) {
        //lazyLoadResource();
    });

    map.addEventListener("zoomend", function (e) {
        toggleResource();
    });
    //

    function getSelectedKinds() {
        if ($(".card-box").length > 0) {
            var resKinds = [];
            $(".card-box.active").each(function () {
                resKinds.push($(this).data("key"));
            });

            return resKinds;
        }
        
        return legendbox.key;
    }
    function loadResources() {
        var postBounds = getMapBounds();
        var resKinds = getSelectedKinds();
        var postData = {
            //bounds: postBounds,
            boudns: {},
            kinds : resKinds
        };
        $.ajax({
            url: "/GIS/ResourceMaps/GetResources",
            data: { queryJson: JSON.stringify(postData) },
            type: "get",
            dataType: "json",
            success: function (data) {
                locateResource(data);
            },
        });
    }

    var resPaintConfig = {
        Cameras: {
            //icon: new BMap.Icon("/Content/images/gis/alarm.png", new BMap.Size(24, 24)),
            iconkey:"alarm",
            size: BMAP_POINT_SIZE_HUGE,
            shape: BMAP_POINT_SHAPE_WATERDROP,
            color: '#d340c3'
        },
        Hospitals: {
            iconkey: "hospital",
            size: BMAP_POINT_SIZE_BIG,
            shape: BMAP_POINT_SHAPE_RHOMBUS,
            color: '#4c58a4'
        },
        GasStations: {
            iconkey: "reunion",
            size: BMAP_POINT_SIZE_BIG,
            shape: BMAP_POINT_SHAPE_STAR,
            color: '#d3ed27'
        },
        Schools: {
            iconkey: "shelter",
            size: BMAP_POINT_SIZE_BIG,
            shape: BMAP_POINT_SHAPE_CIRCLE,
            color: '#16e1cc'
        }
    };

    //_.forEach(resPaintConfig, function (opt, idx) {
        

    //});
    
    //
    function clearPointCllections() {
        _.forEach(_ptCollections, function (val, key) {
            if (_.isArray(val)) {
                _.forEach(val, function (ov) {
                    map.removeOverlay(ov);
                    ov = null;
                });
            } else {
                map.removeOverlay(val);
                val = null;
            }

            delete _ptCollections[key];
        });
        _ptCollections = {};
    }

    function locateResource(data) {
        //
        clearPointCllections();
        //
        _.forEach(data, function (val, key) {
            if (val != null && _.any(val)) {
                console.log(key, resPaintConfig[key]);
                if (val.length > 100) {
                    _ptCollections[key] = addPointCollection(val, resPaintConfig[key]);
                } else {
                    _ptCollections[key] = addPointMarkers(val, resPaintConfig[key]);
                }
            }
        });

    }

    function addPointCollection(aryRes, opt) {
        // map.clearOverlays();
        var points = [];  // 添加海量点数据
        var overlays = [];
       
        for (var i = 0; i < aryRes.length; i++) {
            var res = aryRes[i];
            var pt = new BMap.Point(res.Longitude, res.Latitude); 
            points.push(pt);
        }

        var pointCollection = new BMap.PointCollection(points, opt);  // 初始化PointCollection
        pointCollection.addEventListener('click', onResourceClick);

        map.addOverlay(pointCollection);  // 添加Overlay
       // map.setViewport(points);
        return pointCollection;
    }

    function addPointMarkers(aryRes, opt) {
        // map.clearOverlays();
        var points = [];
        var overlays = [];
        var icn = new BMap.Icon("/Content/images/gis/" + (opt.iconkey || "alarm") + ".png", new BMap.Size(24, 24));
        for (var i = 0; i < aryRes.length; i++) {
            var res = aryRes[i];
            var pt = new BMap.Point(res.Longitude, res.Latitude);
            points.push(pt);
            var marker = new BMap.Marker(pt, { icon: icn});
            map.addOverlay(marker);

            marker.addEventListener('click', onResourceClick);

            overlays.push(marker);
        }
        //map.setViewport(points);
        return overlays;
    }

    function onResourceClick(e) {
        //alert('单击点的坐标为：' + e.point.lng + ',' + e.point.lat);  // 监听点击事件
        var sContent =
            "<h4 style='margin:0 0 5px 0;padding:0.2em 0'>单击点的坐标为</h4>" +
            //"<img style='float:right;margin:4px' id='imgDemo' src='../img/tianAnMen.jpg' width='139' height='104' title='天安门'/>" +
            "<p style='margin:0;line-height:1.5;font-size:13px;text-indent:2em'> " + e.point.lng + ',' + e.point.lat + "</p>" +
            "</div>";
        var infoWindow = new BMap.InfoWindow(sContent);
        map.openInfoWindow(infoWindow, e.point);
    }

    //
    var _manuallyOverlays = [];
    function getManuallyStyleOpts() {
        var styleOptions = {
            strokeColor: "red",    //边线颜色。
            fillColor: "#fff",      //填充颜色。当参数为空时，圆形将没有填充效果。
            strokeWeight: 3,       //边线的宽度，以像素为单位。
            strokeOpacity: 0.8,   //边线透明度，取值范围0 - 1。
            fillOpacity: 0.6,      //填充的透明度，取值范围0 - 1。
            strokeStyle: 'solid' //边线的样式，solid或dashed。
        };
        return styleOptions;
    }
    //
    
    //实例化鼠标绘制工具
    var drawingManager = new BMapLib.DrawingManager(map, {
        isOpen: false, //是否开启绘制模式
        enableDrawingTool: true, //是否显示工具栏
        enableCalculate:true,
        drawingToolOptions: {
            anchor: BMAP_ANCHOR_TOP_LEFT, //位置
            offset: new BMap.Size(65, 15), //偏离值
            drawingModes: [
                BMAP_DRAWING_CIRCLE,
            ],
        },
        circleOptions: _styleOptions, //圆的样式
        //polylineOptions: _styleOptions, //线的样式
        //polygonOptions: _styleOptions, //多边形的样式
        //rectangleOptions: _styleOptions //矩形的样式
    });
    //添加鼠标绘制工具监听事件，用于获取绘制结果
    drawingManager.addEventListener('overlaycomplete', function (e) {
        //
        _manuallyOverlays.push(e.overlay);
        //dialogAlert("overlaycomplete", 1);
        dialogMsg("overlaycomplete", 1);
    });

</script>
