@{
    ViewBag.Title = "应急地图展示";
    Layout = "~/Views/Shared/_MapIndex.cshtml";
}
@section Scripts{

}

@section Styles{
    <style type="text/css">
        body, html, #allmap {
            width: 100%;
            height: 100%;
            overflow: hidden;
            margin: 0;
            font-family: "微软雅黑";
        }

        .map-content {
            padding-right: 10px;
        }
    </style>
}

<div class="ui-layout" id="layout" style="height: 100%; width: 100%;">
    <div class="ui-layout-west">
        <div class="west-Panel">
            <div class="profile-nav">
                <ul style="padding-top: 20px;">
                    <li class="active" data-value="1">加油站</li>
                    <li data-value="2">学校</li>
                    <li data-value="3">摄像头</li>
                    <li class="divide"></li>
                    <li data-value="4">医院</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="ui-layout-center">
        <div class="center-Panel">
            <div class="titlePanel">
                <div class="title-search">
                    <table>
                        <tr>
                            <td style="padding-left: 2px;">
                                <i class="fa fa-map-marker" style="font-size:28px; vertical-align:middle; color:#1d9d74; margin-right:5px;"></i>
                                <input id="txtSuggest" type="text" class="form-control" placeholder="请输入要查询关键字" style="width: 400px; display:inline-block;" />
                            </td>
                            <td style="padding-left: 5px;">
                                <a id="btn_Search" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;查询</a>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="toolbar">
                    <div class="btn-group">
                        <a id="lr-replace" class="btn btn-default" onclick="reload();"><i class="fa fa-refresh"></i>&nbsp;刷新</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="map-content">
            <div id="allmap"></div>
        </div>
    </div>
</div>
<script type="text/javascript">
    //初始化页面
    function InitialPage() {
        //layout布局
        $('#layout').layout({
            applyDefaultStyles: true,
            west__size: 300,
            onresize: function () {
                $(window).resize()
            }
        });
        $('.profile-nav').height($(window).height() - 20);
        $('.map-content').height($(window).height() - 80);
        //resize重设(表格、树形)宽高
        $(window).resize(function (e) {
            window.setTimeout(function () {
                $('.profile-nav').height($(window).height() - 20);
                $('.map-content').height($(window).height() - 80);
            }, 200);
            e.stopPropagation();
        });
    }
    InitialPage();

</script>
<script type="text/javascript">
    var kouMap = new Kou.Map();
    var map = kouMap.map;
    //
    kouMap.iniAutoComplete("txtSuggest");

    //
    //查询事件
    $("#btn_Search").click(function () {
        kouMap.searchAndSetPlace($("#txtSuggest").val());
    });
    //查询回车
    $('#txtSuggest').on('keydown', function (event) {
        if (event.keyCode == "13") {
            $('#btn_Search').trigger("click");
        }
    });

    //确定
    function AcceptClick(onAccept) {
        var postData = {
            address: $("#txtSuggest").val(),
            lng: $("#lng").val(),
            lat: $("#lat").val()
        };
        //
        onAccept(postData);
        dialogClose();
    }

    $(function () {
        //getBoundary();
        loadBoundary();
        lazyLoadResource();
    });

    function getMapBounds() {
        var bounds = map.getBounds();
        var postBounds = {
            lngsw: bounds.Le,
            latsw: bounds.Ke,
            lngne: bounds.Ge,
            latne: bounds.Fe
        };

        return postBounds;
    }
    function loadBoundary() {
        var postBounds = getMapBounds();
        $.ajax({
            url: "/GIS/MapBoundaries/GetListJson",
            data: { queryJson: JSON.stringify(postBounds) },
            type: "get",
            dataType: "json",
            success: function (data) {
                paintBoundary(data);
            },
        });
        
    }

    function paintBoundary(data) {
        var pointArray = [];
        _.each(data, function (b) {
            var boundarypts = b.Boundary;
            var ply = new BMap.Polygon(boundarypts, {
                //strokeWeight: 2, strokeColor: "#ff0000"
                strokeColor: "#0955CF",
                strokeWeight: 2,
                strokeOpacity: 0.7,
                dashStyle: "Solid",
                filled: true,
                fillColor: "#84A8E2",
                fillOpacity: 0.3,
                autoClose: true,
                infowin: false
            }); //建立多边形覆盖物
            map.addOverlay(ply);  //添加覆盖物
            pointArray = pointArray.concat(ply.getPath());
        });

        map.setViewport(pointArray);    //调整视野
        
    }

    //区域
    function getBoundary() {
        var bdary = new BMap.Boundary();
        bdary.get("上海市浦东新区", function (rs) {       //获取行政区域
            map.clearOverlays();        //清除地图覆盖物
            var count = rs.boundaries.length; //行政区域的点有多少个
            if (count === 0) {
                dialogTop("未能获取当前输入行政区域", 'error');
                return;
            }
            var pointArray = [];
            for (var i = 0; i < count; i++) {
                var ply = new BMap.Polygon(rs.boundaries[i], {
                    //strokeWeight: 2, strokeColor: "#ff0000"
                    strokeColor: "#0955CF",
                    strokeWeight: 2,
                    strokeOpacity: 0.7,
                    dashStyle: "Solid",
                    filled: true,
                    fillColor: "#84A8E2",
                    fillOpacity: 0.3,
                    autoClose: true,
                    infowin: false
                }); //建立多边形覆盖物
                map.addOverlay(ply);  //添加覆盖物
                pointArray = pointArray.concat(ply.getPath());
            }
            map.setViewport(pointArray);    //调整视野
        });
    }
    //
    var lazyLoadResource = _.debounce(loadResources, 800);
    map.addEventListener("tilesloaded", function (e) {
        //lazyLoadResource();
    });
    //
    function loadResources() {
        var postBounds = getMapBounds();
        $.ajax({
            url: "/GIS/ResourceMaps/GetResources",
            data: { queryJson: JSON.stringify(postBounds) },
            type: "get",
            dataType: "json",
            success: function (data) {
                locateResource(data);
            },
        });

        
    }

    var resPaintConfig = {
        Cameras: {
            size: BMAP_POINT_SIZE_SMALL,
            shape: BMAP_POINT_SHAPE_WATERDROP,
            color: '#d340c3'
        },
        Hospitals: {
            size: BMAP_POINT_SIZE_BIG,
            shape: BMAP_POINT_SHAPE_RHOMBUS,
            color: '#4c58a4'
        },
        GasStations: {
            size: BMAP_POINT_SIZE_SMALL,
            shape: BMAP_POINT_SHAPE_STAR,
            color: '#d3ed27'
        },
        Schools: {
            size: BMAP_POINT_SIZE_SMALL,
            shape: BMAP_POINT_SHAPE_CIRCLE,
            color: '#16e1cc'
        }
    };
    var ptCollections = {};
    //
    function locateResource(data) {
        //
        _.forEach(data, function (val, key) {
            if (val != null && _.any(val)) {
                ptCollections[key] = addPointCollection(val, resPaintConfig[key]);
            }
        });

    }

    function addPointCollection(aryRes, opt) {
        // map.clearOverlays();
        var points = [];  // 添加海量点数据
        for (var i = 0; i < aryRes.length; i++) {
            var res = aryRes[i];
            points.push(new BMap.Point(res.Longitude, res.Latitude));
        }
        //var options = {
        //    size: BMAP_POINT_SIZE_SMALL,
        //    shape: BMAP_POINT_SHAPE_WATERDROP,
        //    color: '#d340c3'
        //}
        var pointCollection = new BMap.PointCollection(points, opt);  // 初始化PointCollection
        pointCollection.addEventListener('click', function (e) {
            alert('单击点的坐标为：' + e.point.lng + ',' + e.point.lat);  // 监听点击事件
        });

        map.addOverlay(pointCollection);  // 添加Overlay
        return pointCollection;
    }

</script>
